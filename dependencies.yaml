# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - build
      - cuda
      - cuda_version
      - checks
      - docs
      - py_version
      - run
      - test_python
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python
      - depends_on_cucim
      - depends_on_libcucim
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - depends_on_cucim
      - depends_on_libcucim
  py_build_cucim:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: build-system
    includes:
      - rapids_build_setuptools
  py_rapids_build_cucim:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build
  py_run:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: project
    includes:
      - run
  py_optional_test:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python
  py_develop:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: project.optional-dependencies
      key: developer
    includes:
      - develop
  py_docs:
    output: pyproject
    pyproject_dir: python/cucim
    extras:
      table: project.optional-dependencies
      key: docs
    includes:
      - docs
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  build:
    common:
      # Note:
      #   Currently omit pyproject output_type from cmake, ninja. The python
      #   build doesn't use these, but assumes that the C++ libcucim shared
      #   library had already previously been built and the .so file copied to
      #   python/cucim/src/cucim/clara/ before calling `pip install .`.
      - output_types: [conda, requirements]
        packages:
          - cmake>=3.30.4
          - ninja
      - output_types: conda
        packages:
          - c-compiler
          - cuda-nvcc
          - cxx-compiler
      - output_types: [requirements, pyproject]
        packages:
          - wheel
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=14.*
              - sysroot_linux-64==2.28
              - yasm
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=14.*
              - sysroot_linux-aarch64==2.28
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
          - matrix:
              cuda: "13.0"
            packages:
              - cuda-version=13.0
  cuda:
    common:
      - output_types: conda
        packages:
          - cuda-cudart-dev
          - libnvjpeg-dev
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: aarch64
            packages:
          - matrix:
              arch: x86_64
            packages:
              - libcufile-dev
  depends_on_cucim:
    common:
      - output_types: conda
        packages:
          - cucim==25.10.*,>=0.0.0a0
  depends_on_libcucim:
    common:
      - output_types: conda
        packages:
          - libcucim==25.10.*,>=0.0.0a0
  develop:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - pre-commit
          - black
          - ruff
          - isort
  docs:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ipython
          - nbsphinx
          - &numpydoc numpydoc>=1.7
          - pydata-sphinx-theme
          - recommonmark
          # the ceiling on sphinx can be removed when https://github.com/spatialaudio/nbsphinx/issues/825 is resolved
          - sphinx>=8.0.0,<8.2.0
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  rapids_build_setuptools:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-build-backend>=0.4.0,<0.5.0.dev0
          - setuptools>=80.9.0
  run:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - click
          - lazy-loader>=0.4
          - numpy>=1.23.4,<3.0a0
          - scikit-image>=0.19.0,<0.26.0a0
          - scipy>=1.11.2
      - output_types: conda
        packages:
          - &cupy_unsuffixed cupy>=13.6.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cupy-cuda12x>=13.6.0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - cupy-cuda13x>=13.6.0
  test_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - psutil>=5.8.0
          - pytest>=7.0.0,<9.0.0a0
          - pytest-cov>=2.12.1
          - pytest-lazy-fixtures>=1.0.0
          - pytest-xdist
          - tifffile>=2022.8.12
          - pooch>=1.6.0 # needed to download scikit-image sample data
          - pywavelets>=1.6
      - output_types: [conda]
        packages:
          - imagecodecs>=2021.6.8
          - matplotlib-base>=3.7
          - openslide-python>=1.3.0
          - pip
          - pip:
              - opencv-python-headless>=4.6
      - output_types: [requirements, pyproject]
        packages:
          # skip packages on arm64 that don't provide a wheel
          - imagecodecs>=2021.6.8; platform_machine=='x86_64'
          - openslide-python>=1.3.0; platform_machine=='x86_64'
          - matplotlib>=3.7
          - opencv-python-headless>=4.6
      - output_types: [pyproject, requirements]
        packages:
          - *numpydoc
